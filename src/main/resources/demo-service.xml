<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <mvc:annotation-driven/>

    <context:component-scan base-package="com.example"/>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>

    <!-- 读取数据库配置信息  自定义了配置文件读取方法 -->
    <bean class="com.example.config.DecryptPropertyPlaceholderConfigurer"
          p:location="classpath:jdbc.properties"/>

    <bean id="demoDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close"
          p:driverClassName="${demo_driverClassName}"
          p:url="${demo_jdbcUrl}"
          p:username="${encrypt_user}"
          p:password="${encrypt_pwd}"
          p:initialSize="${demo_initialSize}"
          p:maxActive="${demo_maxActive}"
          p:minIdle="${demo_minIdle}"
          p:poolPreparedStatements="${demo_poolPreparedStatements}"
          p:testOnBorrow="${demo_testOnBorrow}"/>

    <!-- 数据源事务配置 start -->
    <bean id="demoJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="demoDataSource"/>

    <bean id="demoTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="demoDataSource"/>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="demoServiceMethod" expression="execution(* com.example.service..*(..))"/>
        <aop:advisor pointcut-ref="demoServiceMethod" advice-ref="demoTxAdvice"/>
    </aop:config>

    <tx:advice id="demoTxAdvice" transaction-manager="demoTransactionManager">
        <tx:attributes>
            <!--以update开始的方法表示开启一个事务-->
            <tx:method name="update*"  propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>
    <!-- 数据源事务配置 end -->
</beans>
